import streamlit as st
import numpy as np
import pandas as pd
from io import BytesIO
import plotly.graph_objects as go
from collections import OrderedDict

st.set_page_config(layout="wide")
@st.cache_data
def read_DRAM(uploadFile):
    B = uploadFile.getvalue()
    A = BytesIO(B);
    #C = pd.ExcelFile(A)
    #D = list(C.sheet_names);
    E = pd.read_excel(A,sheet_name='Info');
    DRAM=E.iloc[5,3]
    return DRAM
@st.cache_data
def read_Project(uploadFile):
    B = uploadFile.getvalue()
    A = BytesIO(B);
    #C = pd.ExcelFile(A)
    #D = list(C.sheet_names);
    E = pd.read_excel(A,sheet_name='Info');
    Project=E.iloc[0,3]
    return Project
@st.cache_data
def read_Freq(uploadFile):
    B = uploadFile.getvalue()
    A = BytesIO(B);
    C = pd.ExcelFile(A)
    D = list(C.sheet_names);
    #E = pd.read_excel(A,sheet_name='Info');
    return D
@st.cache_data
def read_Data(uploadFile,Freq,Vendor,Proj_name):
    B = uploadFile.getvalue()
    A = BytesIO(B);
    C = pd.ExcelFile(A)
    D = list(C.sheet_names);
    E = pd.read_excel(A, sheet_name='Info');
    DRAM = E.iloc[5, 3]
    Project_name = E.iloc[0, 3]
    if DRAM==Vendor and Project_name==Proj_name:
        E = pd.read_excel(A,sheet_name=Freq);
        return E
    else:
        return

# Using "with" notation
with st.sidebar:
    add_radio = st.radio(
        "Choose a Summary Result",
        ("Scenario_Compare", "Compare_Total_Die","Compare_Power Domain","VDD2H VS VDD2L percentage")
    )
    if add_radio == "Compare_Total_Die":
        Plot_Y = st.text_input('Y axis', 100)
        Plot_X = st.text_input('X axis',1000)
    if add_radio == "Scenario_Compare":
        Screnario = st.sidebar.selectbox('Select Screnario', ('Light load for DOU','Medium load for DOU, VR Camera..','Heavy load for game','User Manual'));
        if Screnario=='User Manual':
            DOU = st.text_input('MB/s', 300)
    if add_radio == "VDD2H VS VDD2L percentage":
        DOU = st.text_input('MB/s', 76800)
    if add_radio == "Compare_Power Domain":
        Plot_Y = st.text_input('Y axis', 10)
        Plot_X = st.text_input('X axis', 1000)
    #iterations = st.slider("Current(mA)", 0, 3000,(0, 3000))
    #separation = st.slider("BW(MB/s)", 0, 76800,(0, 76800))

meaFiles=st.file_uploader('Choose Measure file',accept_multiple_files=True,type=['xlsx','xlsm'])

DRAM=[]
Speed=[]
Project=[]
Projects=[]
Total_speed=[]
if len(meaFiles) != 0:
    print(meaFiles)
    for meaFile in meaFiles:
        DRAM.append(read_DRAM(meaFile))
        Project.append(read_Project(meaFile))
        Projects=OrderedDict.fromkeys(Project)
        Speed.extend(read_Freq(meaFile))
        Total_speed=list(set(Speed))
        Total_speed.remove("Info")
        Total_speed=sorted(Total_speed,key=len)
    if Projects is not None:
        Project_List = st.sidebar.multiselect('Select Project', Projects);
        #st.write(Project_List)
    else:
        Project_List = []
    if add_radio == "Compare_Total_Die":
        if Total_speed is not None:
            DRAM_SPEED = st.sidebar.multiselect('Select Speed Sheets', Total_speed);
            #st.write(DRAM_SPEED)
        else:
            DRAM_SPEED = []
    elif add_radio == "Scenario_Compare":
        if Screnario=='Light load for DOU':
            DRAM_SPEED = st.sidebar.multiselect('Select Speed Sheets', ('752M','1536M'));
        elif Screnario=='Medium load for DOU, VR Camera..':
            DRAM_SPEED = st.sidebar.multiselect('Select Speed Sheets', ('3088M','4208M'));
        elif Screnario=='Heavy load for game':
            DRAM_SPEED = st.sidebar.multiselect('Select Speed Sheets', ('5480M','6368M_LP'));
        elif Screnario=='User Manual':
            DRAM_SPEED = st.sidebar.multiselect('Select Speed Sheets', Total_speed);
    elif add_radio == "VDD2H VS VDD2L percentage":
        if Total_speed is not None:
            DRAM_SPEED = st.sidebar.multiselect('Select Speed Sheets', Total_speed);
            #st.write(DRAM_SPEED)
        else:
            DRAM_SPEED = []
    elif add_radio == "Compare_Power Domain":
        if Total_speed is not None:
            DRAM_SPEED = st.sidebar.multiselect('Select Speed Sheets', Total_speed);
            Power_domain = st.sidebar.selectbox('Select Power Domain', ('VDDQ(mA)', 'VDD2H(mA)','VDD2L(mA)','VDD1(mA)'));
            #st.write(DRAM_SPEED)
        else:
            DRAM_SPEED = []
    if add_radio == "VDD2H VS VDD2L percentage":
        if DRAM is not None:
            DRAM_List = st.sidebar.multiselect('Select Single DRAM', DRAM);
            #st.write(DRAM_List)
        else:
            DRAM_List = []
    else:
        if DRAM is not None:
            DRAM_List = st.sidebar.multiselect('Select DRAM', DRAM);
            #st.write(DRAM_List)
        else:
            DRAM_List = []





